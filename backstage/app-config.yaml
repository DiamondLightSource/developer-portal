app:
  title: Diamond Developer Portal
  baseUrl: http://0.0.0.0:3000

organization:
  name: Diamond Light Source

backend:
  baseUrl: http://0.0.0.0:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://0.0.0.0:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  cache:
    store: memory
  reading:
    allow:
      - host: '*.diamond.ac.uk'
      - host: raw.githubusercontent.com
        paths:
          - /DiamondLightSource

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
  gitlab:
    - host: gitlab.diamond.ac.uk
      apiBaseUrl: https://gitlab.diamond.ac.uk/api/v4
      token: ${GITLAB_TOKEN}

techdocs:
  builder: external
  publisher:
    type: awsS3
    awsS3:
      endpoint: https://s3.echo.stfc.ac.uk
      bucketName: techdocs
      s3ForcePathStyle: true
      region: not-applicable # Ceph backed S3 object stores do not use regions

auth:
  environment: development
  providers:
    guest: {}
    github:
      development:
        clientId: ${GITHUB_APP_CLIENT_ID}
        clientSecret: ${GITHUB_APP_SECRET}

catalog:
  readonly: true
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    - type: url
      target: https://gitlab.diamond.ac.uk/sscc-docs/groups/-/jobs/artifacts/main/raw/all-groups.yaml?job=collate
      rules:
        - allow: [Group]
  providers:
    github:
      GitHub-DiamondLightSource:
        organization: 'DiamondLightSource'
        validateLocationsExist: true
        schedule:
          frequency:
            minutes: 60
          timeout:
            minutes: 10
      GitHub-epics-containers:
        organization: 'epics-containers'
        validateLocationsExist: true
        schedule:
          frequency:
            minutes: 60
          timeout:
            minutes: 10
    gitlab:
      GitLab:
        host: gitlab.diamond.ac.uk
        skipForkedRepos: true
        schedule:
          frequency:
            minutes: 60
          timeout:
            minutes: 30
    ldapOrg:
      default:
        target: ldap://ralfed.cclrc.ac.uk
        bind:
          dn: uid=ldap-reader-user,ou=people,ou=example,dc=example,dc=net
          secret: dW5hdXRoZW50aWNhdGVkIExEQVAK
        schedule:
          frequency: PT1H
          timeout: PT10M
        users:
          dn: ou=dls,dc=fed,dc=cclrc,dc=ac,dc=uk
          options:
            filter: (memberOf=cn=DLSLTD_Staff,OU=Automatic Groups,DC=fed,DC=cclrc,DC=ac,DC=uk)
            paged: true
          map:
            name: cn
            displayName: displayName
        groups:
          dn: dc=fed,dc=cclrc,dc=ac,dc=uk
          options:
            filter: (objectClass=group)

search:
  collators:
    catalog:
      schedule:
        # Give the backend server a chance to initiaize before collators are executed
        initialDelay: { seconds: 3 }
        frequency: { minutes: 10 }
        timeout: { minutes: 15 }
    techdocs:
      schedule:
        initialDelay: { seconds: 3 }
        frequency: { minutes: 10 }
        timeout: { minutes: 15 }
